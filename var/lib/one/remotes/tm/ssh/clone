#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2013, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# clone fe:SOURCE host:remote_system_ds/disk.i vmid dsid
#   - fe is the front-end hostname
#   - SOURCE is the path of the disk image in the form DS_BASE_PATH/disk
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - vmid is the id of the VM
#   - dsid is the target datastore (0 is the system datastore)

SRC=$1
DST=$2

VMID=$3
DSID=$4
if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $TMCOMMON

# step: we need to get the disk size from the context
DISK_SIZE="0"
DISK_CONTEXT=$(/usr/bin/onevm show $VMID | awk -F'=' '/DISK_SIZE/ { print $2 }' | sed 's/[",]//g')
if [ $? -ne 0 ]; then
    log "we recieved an error while trying to get the disk size from the vm context"
    exit 1
fi
if [ -n $DISK_CONTEXT ]; then
    log "the vm context has a disk size associated, size: $DISK_CONTEXT"
    # step: since the variable is human added, we need to validate it 
    log "the vm context has disk size $DISK_CONTEXT"
    if [[ ! $DISK_CONTEXT =~ ^[0-9]{1,3}[Gg]?$ ]]; then
        log 'invalid disk size assigned in the context, must be [0-9]{1,3}[Gg]'
        exit 1
    fi
    DISK_SIZE=$DISK_CONTEXT
else
    log "the vm instance does not have disk size in context"
fi

#-------------------------------------------------------------------------------
# Set dst path and dir
#-------------------------------------------------------------------------------

SRC_PATH=`arg_path $SRC`
DST_PATH=`arg_path $DST`

DST_HOST=`arg_host $DST`

DST_DIR=`dirname $DST_PATH`

ssh_make_path $DST_HOST $DST_DIR

#-------------------------------------------------------------------------------
# Copy files to the remote host
#-------------------------------------------------------------------------------
case $SRC in
http://*)
    log "Downloading $SRC"
    RMT_CMD="$WGET -O $DST_PATH $SRC"
    ssh_exec_and_log "$DST_HOST" "$RMT_CMD" "Error downloading $SRC"
    ;;

*)
    log "Cloning $SRC in $DST_PATH"
    IMAGE="${SRC##*/}"
    DST_FILE=${DST##*:}
    RMT_CMD="/usr/local/bin/preload.rb -v -o clone --src $IMAGE --dst $DST_FILE --size $DISK_SIZE >> /var/log/one/preload-install.log"
    ssh_exec_and_log "$DST_HOST" "$RMT_CMD" "Error copying preload image $IMAGE to $DST_FILE" 
    ;;
esac
